"""
Django settings for elisasrecipe project.

Generated by 'django-admin startproject' using Django 4.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
from pathlib import Path

from django.utils.translation import gettext_lazy as _

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


SECRET_KEY = os.environ.get("SECRET_KEY", "Jos√© Martins")

DEBUG = os.environ.get("DEBUG", False)

ALLOWED_HOSTS = []
INTERNAL_IPS = ["127.0.0.1"]

INSTALLED_APPS = [
    "pictures",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.postgres",
    "theme",
    "tailwind",
    "pattern_library",
    "django_browser_reload",
    "recipe",
    "account",
    "django_htmx",
    "storages",
    "django_quill",
    "common",
    "article",
]

TAILWIND_APP_NAME = "theme"

MIDDLEWARE = [
    # "elisasrecipe.middleware.RemoveDataTestMiddleware",
    "django_htmx.middleware.HtmxMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "django_browser_reload.middleware.BrowserReloadMiddleware",
    "django.middleware.locale.LocaleMiddleware",
]

ROOT_URLCONF = "elisasrecipe.urls"

if DEBUG:
    X_FRAME_OPTIONS = "SAMEORIGIN"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [
            os.path.join(BASE_DIR, "base/templates"),
            os.path.join(BASE_DIR, "accounts/templates"),
            os.path.join(BASE_DIR, "elisasrecipe/templates"),
            os.path.join(BASE_DIR, "common/templates"),
            os.path.join(BASE_DIR, "articles/templates"),
        ],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
            "builtins": ["pattern_library.loader_tags"],
        },
    },
]

WSGI_APPLICATION = "elisasrecipe.wsgi.application"

DATABASES = {
    "default": {
        "ENGINE": os.environ.get("SQL_ENGINE", "django.db.backends.sqlite3"),
        "NAME": os.environ.get("SQL_DATABASE", BASE_DIR / "db.sqlite3"),
        "USER": os.environ.get("SQL_USER", "user"),
        "PASSWORD": os.environ.get("SQL_PASSWORD", "password"),
        "HOST": os.environ.get("SQL_HOST", "localhost"),
        "PORT": os.environ.get("SQL_PORT", "5432"),
    }
}


AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LOCALE_PATHS = (os.path.join(BASE_DIR, "locale/"),)
LANGUAGE_CODE = "en"
LANGUAGES = (
    ("en", _("English")),
    ("fr", _("Francais")),
    ("es", _("Espagnol")),
)


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"

STATICFILES_DIRS = [BASE_DIR / "static"]

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

LOGOUT_REDIRECT_URL = "home"


AUTH_USER_MODEL = "account.User"


TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True


APIKEY_MAILWIND = os.environ.get("APIKEY_MAILWIND")

# AWS_STORAGE_BUCKET_NAME = os.environ.get("AWS_STORAGE_BUCKET_NAME")
# AWS_S3_REGION_NAME = os.environ.get("AWS_S3_REGION_NAME")
# AWS_S3_ENDPOINT_URL = os.environ.get("AWS_S3_ENDPOINT_URL")
# AWS_ACCESS_KEY_ID = os.environ.get("AWS_ACCESS_KEY_ID")
# AWS_SECRET_ACCESS_KEY = os.environ.get("AWS_SECRET_ACCESS_KEY")


MINIO_ACCESS_KEY = os.getenv("MINIO_ROOT_USER")
MINIO_SECRET_KEY = os.getenv("MINIO_ROOT_PASSWORD")
MINIO_BUCKET_NAME = os.getenv("MINIO_BUCKET_NAME")
MINIO_ENDPOINT = os.getenv("MINIO_ENDPOINT")


# DEFAULT_FILE_STORAGE = "storages.backends.s3boto3.S3Boto3Storage"

AWS_ACCESS_KEY_ID = MINIO_ACCESS_KEY
AWS_SECRET_ACCESS_KEY = MINIO_SECRET_KEY
AWS_STORAGE_BUCKET_NAME = MINIO_BUCKET_NAME
AWS_S3_ENDPOINT_URL = MINIO_ENDPOINT
AWS_DEFAULT_ACL = None
AWS_QUERYSTRING_AUTH = True
# AWS_S3_FILE_OVERWRITE = False

STORAGES = {
    "default": {
        "BACKEND": "storages.backends.s3boto3.S3Boto3Storage",
    },
    "staticfiles": {
        # Leave whatever setting you already have here, e.g.:
        "BACKEND": "django.contrib.staticfiles.storage.StaticFilesStorage",
    },
}


QUILL_CONFIGS = {
    "default": {
        "theme": "bubble",
        "modules": {
            "syntax": True,
            "toolbar": [
                [
                    {"font": []},
                    {"size": []},
                    # {"header": []},
                    # {"align": []},
                    "bold",
                    "italic",
                    "underline",
                    "strike",
                    # "blockquote",
                    # {"color": []},
                    # {"background": []},
                ],
                [
                    {"list": "ordered"},
                    {"list": "bullet"},
                    # "code-block",
                    # "link",
                    # "image",
                ],
                ["clean"],
            ],
        },
    },
    "article": {
        "theme": "bubble",
        "modules": {
            "syntax": True,
            "toolbar": [
                [
                    {"font": []},
                    {"size": []},
                    # {"header": []},
                    # {"align": []},
                    "bold",
                    "italic",
                    "underline",
                    "strike",
                    # "blockquote",
                    # {"color": []},
                    # {"background": []},
                ],
                [
                    {"list": "ordered"},
                    {"list": "bullet"},
                    # "code-block",
                    # "link",
                    # "image",
                ],
                ["clean"],
            ],
        },
    },
    "comment": {
        "theme": "bubble",
        "modules": {
            "syntax": True,
            "toolbar": [
                [
                    "bold",
                    "italic",
                    "strike",
                ],
            ],
        },
    },
    "recipe": {
        "theme": "bubble",
        "modules": {
            "syntax": True,
            "toolbar": [
                [
                    "bold",
                    "italic",
                    "strike",
                ],
            ],
        },
    },
}


# Minimum similarity threshold for trigram similarity search
PG_TRGM_DEFAULT_SIMILARITY_THRESHOLD = 0.1


PICTURES = {
    "BREAKPOINTS": {
        "xs": 576,
        "s": 768,
        "m": 992,
        "l": 1200,
        "xl": 1400,
    },
    "GRID_COLUMNS": 12,
    "CONTAINER_WIDTH": 1200,
    "FILE_TYPES": ["WEBP"],
    "PIXEL_DENSITIES": [1, 2],
    "USE_PLACEHOLDERS": False,
    "QUEUE_NAME": "pictures",
    "PROCESSOR": "pictures.tasks.process_picture",
}


PATTERN_LIBRARY = {
    # Groups of templates for the pattern library navigation. The keys
    # are the group titles and the values are lists of template name prefixes that will
    # be searched to populate the groups.
    "SECTIONS": (
        ("components", ["patterns/components"]),
        ("pages", ["patterns/pages"]),
    ),
    # Configure which files to detect as templates.
    "TEMPLATE_SUFFIX": ".html",
    # Set which template components should be rendered inside of,
    # so they may use page-level component dependencies like CSS.
    "PATTERN_BASE_TEMPLATE_NAME": "patterns/base.html",
    # Any template in BASE_TEMPLATE_NAMES or any template that extends a template in
    # BASE_TEMPLATE_NAMES is a "page" and will be rendered as-is without being wrapped.
    "BASE_TEMPLATE_NAMES": ["patterns/base_page.html"],
}
